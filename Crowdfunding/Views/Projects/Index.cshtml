@model Crowdfunding.Utilities.Pagination<Crowdfunding.Models.Project>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchByForm" }))
{
    <div class="form-group">
        <label for="">Find by name @Html.TextBox("SearchString", null, new { @class = "form-control" })</label>
        <input type="submit" id="button-searchstring" class="btn btn-default" value="search" />
    </div>
    <div class="form-group">
        <label for="">Find by Category</label>
        @await Component.InvokeAsync("CategoriesDropdownListComponent")
    </div>
}
@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Project Name
            </th>
            <th>
                Project Description
            </th>
            <th>
                Asked Fund
            </th>
            <th>
                Days
            </th>
            <th>
                Number of Benefits
            </th>
            <th>
                Media
            </th>
            <th>
                Video URL
            </th>
            <th>
                Start Date
            </th>
            <th>
                Category
            </th>
            <th>
                User Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AskedFund)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Days)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfBenefits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MediaPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VideoUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProjectId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProjectId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProjectId">Delete</a>
                </td>
            </tr>
        }
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
    </tbody>
</table>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>